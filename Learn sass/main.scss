// import global rules
@use "./sass/layout/global-rules";

//import variables

@use "./sass/variables/variables" as *;

// import mixins file

@use "./sass/helpers/mixins" as *;

// import functions file

@use "./sass/helpers/functions" as *;

.section {
    background-color: $section_background_color;
    color: $main_color;
}

.parent {
    font-size: 20px;
    .childe {
        background-color: $main_color;
        .test {
            color: red;
        }
    }
}

.test {
    padding: 1px {
        top: 20px;
    }
}

%main-box {
    background-color: $section_background_color;
    font-size: 30px;
    color: red;
}

.pr {
    font-family: "Courier New", Courier, monospace;
    @extend %main-box;
}

.parent-one,
.parent-tow {
    color: gray;
    .chailed {
        padding: auto;
        max-width: 20px;
    }
}

$direction: "top";

/* control flow " if condition & #{$direction} " */

.arrow-div {
    width: 400px;
    @extend %main-box;
    margin: 50px auto;
    height: 400px;
    border: 2px solid #444;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    &::before {
        content: "";
        position: absolute;
        border: 20px solid transparent;

        // mixins to determine triangil direction

        @include tr-direction($direction);
    }
}

/// function to return the max number of array

@for $i from 1 through 10 {
    .class-#{$i} {
        font-size: 10px + $i;
    }
}

$socials: (
    "facebook": "blue",
    "tweeter": "green",
    "github": "black",
);

@each $name, $color in $socials {
    .#{$name} {
        background-color: #{$color};
        .paragraph {
            color: #{$color};
        }

        &::before {
            content: "#{$name}";
        }
    }
}

$width: 100px;
.ttt {
    width: $width;
    height: half($width);
}

.media {
    @include breakPoint(mobile) {
        font-size: 10px;
    }
    @include breakPoint(small) {
        font-size: 15px;
    }
    @include breakPoint(medium) {
        font-size: 20px;
    }
    @include breakPoint(large) {
        font-size: 25px;
    }
}

.image {
    background-color: rgb(43 110 110);
    overflow: hidden;
    @include centerFlex;
    height: 600px;
    position: relative;
    img {
        width: 350px;
        transition: 0.5s;
    }
    img:hover {
        transform: scale(1.2) rotate(5deg);
        opacity: 0.5;
        position: absolute;
        transform: translate(50%, -50%);
    }
}

.title {
    color: #fff;
    width: fit-content;
    margin: 50px auto;
    padding: 20px;
    position: relative;
    &::before {
        content: "";
        background-color: red;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        width: 100%;
        height: 100%;
        transform: skew(338deg);
    }
}

.aa {
    background-color: aqua;
    margin-bottom: 100px;
    width: fit-content;
    margin: 100px auto;

    span {
        display: block;
        height: 300px;
        width: 300px;
        border-radius: 50%;
        background-color: rebeccapurple;
        margin: 50px auto;
        transform-origin: top left;
        transform: rotate(100deg);
    }
}

@for $i from 1 through 4 {
    .shape-#{$i} {
        background-color: rgb(208, 208, 208);
        width: 200px;
        height: 200px;
        margin: 50px auto;
        padding: 10px;
        perspective: 300px;
        perspective-origin: center center;
        & > div {
            background-color: #444;
            color: #fff;
            width: 100%;
            height: 100%;
            @include centerFlex;
            transition: 0.5s;
        }
    }
}

.shape-1 > div:hover {
    transform: skewX(20deg);
}

.shape-2 > div:hover {
    transform: rotate3d(0, 1, 0, 90deg);
    transform-origin: center center;
}

.shape-3 > div:hover {
    transform: translate3d(20px, 20px, 30px);
    opacity: 0.8;
}

.shape-4 > div:hover {
    transform: scale(1.5);
}

.container {
    @include centerFlex;
    perspective: 600px;
    .box {
        position: relative;
        width: 200px;
        transform-style: preserve-3d;
        transition: transform 1.5s;

        .flip {
            position: absolute;
            width: 200px;
            height: 150px;
            @include centerFlex;
            color: #fff;
            backface-visibility: hidden;
        }
        .front {
            background-color: rgb(118, 28, 52);
        }
        .back {
            background-color: rgb(21, 175, 175);
            transform: rotateY(180deg);
        }

        &.box:hover {
            transform: rotateY(180deg);
            // transform: perspective(20px);
        }
    }
}

@keyframes change_color {
    0% {
        background-color: red;
    }
    50% {
        background-color: rebeccapurple;
    }
    75% {
        background-color: rgb(66, 162, 130);
    }
    100% {
        background-color: red;
    }
}

.keyframes {
    width: 200px;
    margin: 150px auto;
    height: 200px;
    color: #fff;
    font-weight: bold;
    @include centerFlex;
    animation-name: change_color;
    animation-duration: 7s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
}

.spine {
    background-color: rgb(21 175 175);
    width: 100px;
    height: 100px;
    border-radius: 50%;
    margin: 0 auto;
    border: 3px solid rgb(102 84 245) {
        left: 3px solid transparent;
    }
    // animation-name: spine;
    // animation-duration: 1s;
    // animation-timing-function: linear;
    // animation-iteration-count: infinite;
    animation: spine 1s linear 0s 2 normal;

    &:hover {
        animation-play-state: paused;
    }
}

@keyframes spine {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}
